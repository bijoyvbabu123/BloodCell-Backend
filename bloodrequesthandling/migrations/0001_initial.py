# Generated by Django 3.2 on 2023-06-06 17:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BloodRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blood_group', models.CharField(choices=[('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-'), ('O+', 'O+'), ('O-', 'O-')], help_text='Blood Group required.', max_length=3)),
                ('name_of_patient', models.CharField(help_text='Name of patient.', max_length=255)),
                ('date_of_donation', models.DateField(help_text='Donation Date.')),
                ('donation_venue', models.CharField(help_text='Donation venue.', max_length=255)),
                ('district', models.CharField(choices=[('Alappuzha', 'Alappuzha'), ('Ernakulam', 'Ernakulam'), ('Idukki', 'Idukki'), ('Kannur', 'Kannur'), ('Kasaragod', 'Kasaragod'), ('Kollam', 'Kollam'), ('Kottayam', 'Kottayam'), ('Kozhikode', 'Kozhikode'), ('Malappuram', 'Malappuram'), ('Palakkad', 'Palakkad'), ('Pathanamthitta', 'Pathanamthitta'), ('Thiruvananthapuram', 'Thiruvananthapuram'), ('Thrissur', 'Thrissur'), ('Wayanad', 'Wayanad')], help_text='District.', max_length=255)),
                ('contact_number', models.CharField(help_text='Contact number of the patient of by-stander.', max_length=15)),
                ('patient_case', models.TextField(help_text='Patient case.')),
                ('additional_info', models.TextField(blank=True, help_text='Add any additional information if any.', null=True)),
                ('no_of_units', models.IntegerField(help_text='Number of units required.')),
                ('is_case_verified', models.BooleanField(blank=True, default=None, help_text='Is case verified by admin. (True/False) after admin verification. None if admin has not yet verified.', null=True)),
            ],
            options={
                'verbose_name': 'Blood Requirement',
                'verbose_name_plural': 'Blood Requirements',
            },
        ),
        migrations.CreateModel(
            name='CompletedDonations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_user_verified', models.BooleanField(default=False, help_text='Has the user verified the donation has been completed. (True/False) after user verification.')),
                ('is_admin_verified', models.BooleanField(blank=True, default=None, help_text='Has the admin verified the donation has been completed. (True/False) after admin verification. None if admin has not yet verified.', null=True)),
                ('blood_requirement', models.ForeignKey(help_text='Blood requirement.', on_delete=django.db.models.deletion.CASCADE, to='bloodrequesthandling.bloodrequirement')),
                ('user', models.ForeignKey(help_text='User.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Completed Donation',
                'verbose_name_plural': 'Completed Donations',
            },
        ),
        migrations.CreateModel(
            name='AvailableDonors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_willing_to_donate', models.BooleanField(blank=True, default=None, help_text='Is willing to donate. (True/False) after user confirmation. None if user has not yet confirmed.', null=True)),
                ('approved_time', models.DateTimeField(blank=True, help_text='Time when the user gave a response to the request.', null=True)),
                ('blood_requirement', models.ForeignKey(help_text='Blood requirement.', on_delete=django.db.models.deletion.CASCADE, to='bloodrequesthandling.bloodrequirement')),
                ('user', models.ForeignKey(help_text='User.', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Available Donor',
                'verbose_name_plural': 'Available Donors',
            },
        ),
    ]
